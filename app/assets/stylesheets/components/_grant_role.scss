
// Grant role CSS

/****************************
tips
*****************************/
.tooltip {
    position: relative;
    display: inline-block;

 & .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 1;
    top: 250%;
    left: 30%;
    margin-left: -60px;
}


 & .tooltiptext::after {
    content: " ";
    position: absolute;
    bottom: 100%;  /* At the top of the tooltip */
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: transparent transparent black transparent;
}

  &:hover .tooltiptext {
    visibility: visible;
  }
  & ul {
    padding-left: 2px;
  }

}

/* Show the tooltip text when you mouse over the tooltip container */

/****************************
SLIDER BAR
*****************************/

// set global fontsize in px or em. bar and label size will be affected
$base_fontsize:  1em;
$bar_bg_color: #fff;
$default_hover_color:#3f4449;
$label_text_color: #a6abb1;
$label_highlight_color: #fff;
$border_radius: 5px;
$border_thickness: 2px;

//functions
@mixin appearance-none() {
  -webkit-appearance: none;
   -moz-appearance:    none;
   appearance:         none;
}
@mixin border-box() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
@function vendor($vendor) {
  @return '-' + $vendor + '-';
}

@mixin dg-bounce($name) {
  @-webkit-keyframes $name{ @include dg-bounce-keys(vendor('webkit')); }
  @-moz-keyframes $name{ @include dg-bounce-keys(vendor('moz')); }
  @-o-keyframes $name{ @include dg-bounce-keys(vendor('o')); }
  @-ms-keyframes $name{ @include dg-bounce-keys(vendor('ms')); }
  @keyframes $name {  @include dg-bounce-keys(''); }
}
@mixin dg-bounce-keys($prefix){
    0%   {@include transformY(0 , $prefix);}
    25%   {@include transformY(-3px, $prefix);}
    50%   {@include transformY(0 , $prefix);}
    100% {@include transformY(0 , $prefix);}
}
@mixin transformY($y, $prefix){
  @if not ($prefix == 'all') {
    #{$prefix + transform}: translateY($y);
  }
  @else {
    #{vendor('webkit') + transform}: translateY($y);
    #{vendor('moz') + transform}: translateY($y);
    #{vendor('o') + transform}: translateY($y);
    #{vendor('ms') + transform}: translateY($y);
    transform: translateY($y);
  }
}

@mixin mq($size) {
  @if $size == tiny { @media only screen and (max-width: 480px) { @content; } }
  @else if $size == small { @media only screen and (max-width: 768px) { @content; } }
  @else if $size == medium { @media only screen and (max-width: 992px) { @content; } }
  @else if $size == large { @media only screen and (max-width: 1440px)  { @content; } }
}

//delete as necessary


.dgradio-sb {
  &,.dg-label,.dg-bg  {
    border-radius: $border_radius;
    margin:0;
    padding:0;
    border:0;
    @include border-box();
  }

  & {
    position: relative;
    display: block;
    clear: both;
    background: $bar_bg_color;

    /* set global font size manually here if needed*/
    font-size: $base_fontsize;

    border: $border_thickness solid #cdd4db;
    height: 0.25em;
    margin-top: 2em;
    margin-bottom: 1em;
    @include mq(small) { font-size: 0.875em; }
    @include mq(tiny) { font-size: 0.8125em; }
  }

  .dg-item {
    @include appearance-none();
    display: none !important;
  }

  .dg-label {
    &, .dg-bg {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: auto;
      height: 100%;
      font-size: 0.875em;
      line-height: 1;
      text-align: right;
    }

    & {
      cursor: pointer;
      color: $label_highlight_color;
      padding: 1.125em 0.5em;
      transform-style: preserve-3d;
      letter-spacing: 1px;
      @include mq(small) {
        letter-spacing: normal;
        word-wrap:break-word;
        padding: 1.125emem 0.5em 1.125em 0;
      }
    }

    @for $i from 1 through 10 {
      &.#{'dg'}-#{$i * 10} {width: #{$i * 10%}; z-index:#{11-$i}; }
    }

    &:nth-of-type(1) .dg-bg{background: #ace527;}
    &:nth-of-type(2) .dg-bg{background: orange;}
    &:nth-of-type(3) .dg-bg{background: red;}
    //&:nth-of-type(4) .dg-bg{background: #ff6a26;}

    &:before {
      content:'';
          position: absolute;
          width: 0;
        height: 0;
          top: -6px;
          bottom: 0;
          left:auto;
          right: -4px;
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        border-top: 6px solid #b8c2c6;
    }

    &:after {
      content: attr(data-caption);
      position: absolute;
      letter-spacing: 1px;
      color: $default_hover_color;
      bottom: calc(100% + 1em);
      right: 0;
      opacity:0;
      transition: opacity 0.5s ease;
      max-width: 100px;
      @include mq(small) {letter-spacing: normal;}
    }
    &:before, &:hover:before{
      transition: border 0.5s ease;
    }
    &:hover {
      &:before {
        border-top-color: $default_hover_color;
        -webkit-animation: dg-bounce  1s infinite;
        -moz-animation:    dg-bounce  1s infinite;
        -o-animation:      dg-bounce  1s infinite;
        animation:         dg-bounce  1s infinite;
      }
      &:after {
        opacity:1;
      }
    }
    .dg-bg {
      width: 0;
      z-index: -1;
      border: 2px solid $bar_bg_color;
    }
  }

  .dg-item {
    &+.dg-label {
      &, .dg-bg {
        transition-duration: 0.5s , 0.5s;
        transition-timing-function: cubic-bezier(.17,.67,.5,.96);
      }
      & {
        transition-property: color;
        color: $label_highlight_color;
      }
      .dg-bg {
        transition-property: width, opacity;
        width: 100%;
        opacity: 1;
      }
    }
    &:checked {
      ~:not(:checked)+.dg-label {
        &, .dg-bg {
          transition-duration: 0.8s, 0.5s;
          transition-timing-function: cubic-bezier(.55,0,.63,.91);
        }
        & {
          transition-property: color;
          color:$label_text_color;
        }
        &:hover {
          transition: color 0.4s ease;
          color:$default_hover_color;
        }
        .dg-bg {
          transition-property: width, opacity;
            width: 0%;
          opacity:0;
        }
      }
      +.dg-label {
        &:before {
          border-top-color: $default_hover_color;
        }
        &:after {
          opacity: 1;
        }
      }
    }
  }

  &:hover .dg-label:not(:hover):after{
    opacity: 0;
  }
}

@include dg-bounce(dg-bounce);




